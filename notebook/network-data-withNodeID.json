{"paragraphs":[{"text":"\n/////////////////node id label added//////////////////////data.txt(short version of 0.edges) used\n\n%spark\nimport org.apache.spark.sql.functions._ \n\n//Useful function for checking outputs for dataframe/dataset\n/*\n df.first()\n df.show()\n str_edges.first()\n*/\n\n// ======================= Read in data ============================\n\n//Read in local file (textfile)?\nval graphData = sc.textFile(\"/Users/Shan/projects/bigdata-viz/data/data.txt\")\nvar similar_array = Array(1,3,5)\n//Create a case class???\ncase class Edge(source: Integer, target: Integer)\n\n//Map the intput, convert to integer\nvar data = graphData.map(s=>s.split(\" \"))\n                    .map(s=>Edge(s(0).toInt, s(1).toInt))\n                    \n\n\n// ====================== Process nodes =============================\n\n//Conver RDD to data frame\nvar data_df = data.toDF()\n\n//Add another column, with index\nvar df = data_df.withColumn(\"id\",monotonicallyIncreasingId + 1)\n\n//Get distinct src nodes\nvar src = df.select(\"source\").distinct()\n//Get distinct tgt nodes\nvar tgt = df.select(\"target\").distinct()\n\n//Get the union of both src and tgt nodes, then select only distinct\nvar distinct_nodes = src.union(tgt).distinct()\n//distinct_nodes.show()\n\n\n//1. Map the nodes into string\n/*\nBefore     After\n\nNode       Node\n1         {\"id\": 1}\n2         {\"id\": 2}\n3         {\"id\": 3}\n...\n*/\n\n//2. collect() convert the column into an array: [{\"id\": 1}, {\"id\": 2},  {\"id\": 3}, ...]\n//3. mkString(\",\") concatenate the array into a string: \"{\"id\": 1}, {\"id\": 2},  {\"id\": 3}, ...\"\nvar str_nodes = distinct_nodes.map(row => s\"\"\"{\"id\": ${row.get(0)}, \"label\": ${row.get(0)}}\"\"\").collect().mkString(\",\")\n//str_nodes = distinct_nodes.map(row => s\"\"\" {\"id\": ${row.get(0)}, \"label\": ${row.get(0)}}\"\"\")\n//Add [] to the beginning and end of the string\nvar nodes = s\"\"\"[$str_nodes]\"\"\"\n\n\n// ====================== Process edges =============================\n\n//Map the dataframe into edges\nvar str_edges = df.map(e=>s\"\"\"{\"source\": ${e(0)}, \"target\": ${e(1)}, \"id\": ${e(2)}}\"\"\").collect().mkString(\",\")\n\nvar edges = s\"\"\"[$str_edges]\"\"\"\n\n// ====================== Use nodes and edges for %network ==================\n\n//hard code color, just to try\nprint(s\"\"\"\n%network {\n    \"nodes\": $nodes,\n    \"edges\": $edges,\n    \"labels\": {\"1\": \"#8BC34A\", \"2\": \"#8BC34A\",\"3\": \"#3071A9\"}\n}\n\"\"\")\n","user":"anonymous","dateUpdated":"2018-01-26T00:55:41-0500","config":{"editorSetting":{"language":"scala"},"colWidth":11,"editorMode":"ace/mode/scala","fontSize":9,"results":{"0":{"graph":{"mode":"table","height":1083.01,"optionOpen":false}},"1":{"graph":{"mode":"network","height":1043.01,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{}},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false},"stackedAreaChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"}},"commonSetting":{},"keys":[{"name":"id","index":0,"aggr":"sum"}],"groups":[],"values":[{"name":"label","index":1,"aggr":"sum"}]},"helium":{}}},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"import org.apache.spark.sql.functions._\ngraphData: org.apache.spark.rdd.RDD[String] = /Users/Shan/projects/bigdata-viz/data/data.txt MapPartitionsRDD[105] at textFile at <console>:42\ndefined class Edge\ndata: org.apache.spark.rdd.RDD[Edge] = MapPartitionsRDD[107] at map at <console>:47\ndata_df: org.apache.spark.sql.DataFrame = [source: int, target: int]\nwarning: there was one deprecation warning; re-run with -deprecation for details\ndf: org.apache.spark.sql.DataFrame = [source: int, target: int ... 1 more field]\nsrc: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [source: int]\ntgt: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [target: int]\ndistinct_nodes: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [source: int]\nstr_nodes: String = {\"id\": 28, \"label\": 28},{\"id\": 26, \"label\": 26},{\"id\": 27, \"label\": 27},{\"id\": 12, \"label\": 12},{\"id\": 22, \"label\": 22},{\"id\": 1, \"label\": 1},{\"id\": 13, \"label\": 13},{\"id\": 6, \"label\": 6},{\"id\": 16, \"label\": 16},{\"id\": 3, \"label\": 3},{\"id\": 20, \"label\": 20},{\"id\": 5, \"label\": 5},{\"id\": 19, \"label\": 19},{\"id\": 15, \"label\": 15},{\"id\": 9, \"label\": 9},{\"id\": 17, \"label\": 17},{\"id\": 4, \"label\": 4},{\"id\": 8, \"label\": 8},{\"id\": 23, \"label\": 23},{\"id\": 7, \"label\": 7},{\"id\": 10, \"label\": 10},{\"id\": 25, \"label\": 25},{\"id\": 24, \"label\": 24},{\"id\": 29, \"label\": 29},{\"id\": 21, \"label\": 21},{\"id\": 11, \"label\": 11},{\"id\": 14, \"label\": 14},{\"id\": 2, \"label\": 2},{\"id\": 30, \"label\": 30},{\"id\": 0, \"label\": 0},{\"id\": 18, \"label\": 18}\nnodes: String = [{\"id\": 28, \"label\": 28},{\"id\": 26, \"label\": 26},{\"id\": 27, \"label\": 27},{\"id\": 12, \"label\": 12},{\"id\": 22, \"label\": 22},{\"id\": 1, \"label\": 1},{\"id\": 13, \"label\": 13},{\"id\": 6, \"label\": 6},{\"id\": 16, \"label\": 16},{\"id\": 3, \"label\": 3},{\"id\": 20, \"label\": 20},{\"id\": 5, \"label\": 5},{\"id\": 19, \"label\": 19},{\"id\": 15, \"label\": 15},{\"id\": 9, \"label\": 9},{\"id\": 17, \"label\": 17},{\"id\": 4, \"label\": 4},{\"id\": 8, \"label\": 8},{\"id\": 23, \"label\": 23},{\"id\": 7, \"label\": 7},{\"id\": 10, \"label\": 10},{\"id\": 25, \"label\": 25},{\"id\": 24, \"label\": 24},{\"id\": 29, \"label\": 29},{\"id\": 21, \"label\": 21},{\"id\": 11, \"label\": 11},{\"id\": 14, \"label\": 14},{\"id\": 2, \"label\": 2},{\"id\": 30, \"label\": 30},{\"id\": 0, \"label\": 0},{\"id\": 18, \"label\": 18}]\nstr_edges: String = {\"source\": 0, \"target\": 1, \"id\": 1},{\"source\": 0, \"target\": 2, \"id\": 2},{\"source\": 0, \"target\": 3, \"id\": 3},{\"source\": 0, \"target\": 4, \"id\": 4},{\"source\": 0, \"target\": 5, \"id\": 5},{\"source\": 0, \"target\": 6, \"id\": 6},{\"source\": 0, \"target\": 7, \"id\": 7},{\"source\": 0, \"target\": 8, \"id\": 8},{\"source\": 0, \"target\": 9, \"id\": 9},{\"source\": 0, \"target\": 10, \"id\": 10},{\"source\": 0, \"target\": 11, \"id\": 11},{\"source\": 0, \"target\": 12, \"id\": 12},{\"source\": 0, \"target\": 13, \"id\": 13},{\"source\": 0, \"target\": 14, \"id\": 14},{\"source\": 0, \"target\": 15, \"id\": 15},{\"source\": 0, \"target\": 16, \"id\": 16},{\"source\": 0, \"target\": 17, \"id\": 17},{\"source\": 0, \"target\": 18, \"id\": 18},{\"source\": 0, \"target\": 19, \"id\": 19},{\"source\": 0, \"target\": 20, \"id\": 20},{\"source\": 0, \"target\": 21, \"id\": 2...edges: String = [{\"source\": 0, \"target\": 1, \"id\": 1},{\"source\": 0, \"target\": 2, \"id\": 2},{\"source\": 0, \"target\": 3, \"id\": 3},{\"source\": 0, \"target\": 4, \"id\": 4},{\"source\": 0, \"target\": 5, \"id\": 5},{\"source\": 0, \"target\": 6, \"id\": 6},{\"source\": 0, \"target\": 7, \"id\": 7},{\"source\": 0, \"target\": 8, \"id\": 8},{\"source\": 0, \"target\": 9, \"id\": 9},{\"source\": 0, \"target\": 10, \"id\": 10},{\"source\": 0, \"target\": 11, \"id\": 11},{\"source\": 0, \"target\": 12, \"id\": 12},{\"source\": 0, \"target\": 13, \"id\": 13},{\"source\": 0, \"target\": 14, \"id\": 14},{\"source\": 0, \"target\": 15, \"id\": 15},{\"source\": 0, \"target\": 16, \"id\": 16},{\"source\": 0, \"target\": 17, \"id\": 17},{\"source\": 0, \"target\": 18, \"id\": 18},{\"source\": 0, \"target\": 19, \"id\": 19},{\"source\": 0, \"target\": 20, \"id\": 20},{\"source\": 0, \"target\": 21, \"id\": 21},...\n"},{"type":"NETWORK","data":"{\n    \"nodes\": [{\"id\": 28, \"label\": 28},{\"id\": 26, \"label\": 26},{\"id\": 27, \"label\": 27},{\"id\": 12, \"label\": 12},{\"id\": 22, \"label\": 22},{\"id\": 1, \"label\": 1},{\"id\": 13, \"label\": 13},{\"id\": 6, \"label\": 6},{\"id\": 16, \"label\": 16},{\"id\": 3, \"label\": 3},{\"id\": 20, \"label\": 20},{\"id\": 5, \"label\": 5},{\"id\": 19, \"label\": 19},{\"id\": 15, \"label\": 15},{\"id\": 9, \"label\": 9},{\"id\": 17, \"label\": 17},{\"id\": 4, \"label\": 4},{\"id\": 8, \"label\": 8},{\"id\": 23, \"label\": 23},{\"id\": 7, \"label\": 7},{\"id\": 10, \"label\": 10},{\"id\": 25, \"label\": 25},{\"id\": 24, \"label\": 24},{\"id\": 29, \"label\": 29},{\"id\": 21, \"label\": 21},{\"id\": 11, \"label\": 11},{\"id\": 14, \"label\": 14},{\"id\": 2, \"label\": 2},{\"id\": 30, \"label\": 30},{\"id\": 0, \"label\": 0},{\"id\": 18, \"label\": 18}],\n    \"edges\": [{\"source\": 0, \"target\": 1, \"id\": 1},{\"source\": 0, \"target\": 2, \"id\": 2},{\"source\": 0, \"target\": 3, \"id\": 3},{\"source\": 0, \"target\": 4, \"id\": 4},{\"source\": 0, \"target\": 5, \"id\": 5},{\"source\": 0, \"target\": 6, \"id\": 6},{\"source\": 0, \"target\": 7, \"id\": 7},{\"source\": 0, \"target\": 8, \"id\": 8},{\"source\": 0, \"target\": 9, \"id\": 9},{\"source\": 0, \"target\": 10, \"id\": 10},{\"source\": 0, \"target\": 11, \"id\": 11},{\"source\": 0, \"target\": 12, \"id\": 12},{\"source\": 0, \"target\": 13, \"id\": 13},{\"source\": 0, \"target\": 14, \"id\": 14},{\"source\": 0, \"target\": 15, \"id\": 15},{\"source\": 0, \"target\": 16, \"id\": 16},{\"source\": 0, \"target\": 17, \"id\": 17},{\"source\": 0, \"target\": 18, \"id\": 18},{\"source\": 0, \"target\": 19, \"id\": 19},{\"source\": 0, \"target\": 20, \"id\": 20},{\"source\": 0, \"target\": 21, \"id\": 21},{\"source\": 0, \"target\": 22, \"id\": 22},{\"source\": 0, \"target\": 23, \"id\": 23},{\"source\": 0, \"target\": 24, \"id\": 24},{\"source\": 0, \"target\": 25, \"id\": 25},{\"source\": 0, \"target\": 26, \"id\": 26},{\"source\": 0, \"target\": 27, \"id\": 27},{\"source\": 0, \"target\": 28, \"id\": 28},{\"source\": 0, \"target\": 29, \"id\": 29},{\"source\": 0, \"target\": 30, \"id\": 30}],\n    \"labels\": {\"1\": \"#8BC34A\", \"2\": \"#8BC34A\",\"3\": \"#3071A9\"}\n}\n"}]},"apps":[],"jobName":"paragraph_1515781038668_-591737782","id":"20171231-223419_740064600","dateCreated":"2018-01-12T13:17:18-0500","dateStarted":"2018-01-25T23:07:16-0500","dateFinished":"2018-01-25T23:07:19-0500","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:103","runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://192.168.31.142:4041/jobs/job/?id=8","http://192.168.31.142:4041/jobs/job/?id=9"],"interpreterSettingId":"2D3XQTERJ"}}},{"text":"/////////////////// with node id label added and color filtration//////////////////////////////\n\n%spark\nimport org.apache.spark.sql.functions._\nval graphData = sc.textFile(\"/Users/Shan/projects/bigdata-viz/data/data.txt\")\nvar similar_array = Array(1,3,5)\n\ncase class Edge(source: Integer, target: Integer)\n\n\nvar data = graphData.map(s=>s.split(\" \"))\n                    .map(s=>Edge(s(0).toInt, s(1).toInt))\nvar data_df = data.toDF()\n\nvar df = data_df.withColumn(\"id\",monotonicallyIncreasingId + 1)\n\nvar src = df.select(\"source\").distinct()\nvar tgt = df.select(\"target\").distinct()\nvar distinct_nodes = src.union(tgt).distinct()\n\nvar str_nodes = distinct_nodes.map(row => s\"\"\"{\"id\": ${row.get(0)}, \"label\": ${row.get(0)}}\"\"\").collect().mkString(\",\")\nvar nodes = s\"\"\"[$str_nodes]\"\"\"\n\nvar str_edges = df.map(e=>s\"\"\"{\"source\": ${e(0)}, \"target\": ${e(1)}, \"id\": ${e(2)}}\"\"\").collect().mkString(\",\")\nvar edges = s\"\"\"[$str_edges]\"\"\"\n\nvar similar_array2 = similar_array.map(n => s\"\"\"\"${n}\": \"#3071A9\"\"\"\").mkString(\",\")\nvar labels = s\"\"\"{$similar_array2}\"\"\"\n\n//label property added to mark similar nodes with blue color\nprint(s\"\"\"\n%network {\n    \"nodes\": $nodes,\n    \"edges\": $edges,\n    \"labels\": $labels  \n}\n\"\"\")\n","user":"anonymous","dateUpdated":"2018-01-26T00:53:56-0500","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{"1":{"graph":{"mode":"network","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"id":"string","label":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}},"helium":{}}},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1516941421815_776443112","id":"20180125-233701_214848080","dateCreated":"2018-01-25T23:37:01-0500","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:1483","dateFinished":"2018-01-26T00:40:26-0500","dateStarted":"2018-01-26T00:40:22-0500","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"graphData: org.apache.spark.rdd.RDD[String] = /Users/Shan/projects/bigdata-viz/data/data.txt MapPartitionsRDD[133] at textFile at <console>:45\nsimilar_array: Array[Int] = Array(1, 3, 5)\ndefined class Edge\ndata: org.apache.spark.rdd.RDD[Edge] = MapPartitionsRDD[135] at map at <console>:50\ndata_df: org.apache.spark.sql.DataFrame = [source: int, target: int]\nwarning: there was one deprecation warning; re-run with -deprecation for details\ndf: org.apache.spark.sql.DataFrame = [source: int, target: int ... 1 more field]\nsrc: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [source: int]\ntgt: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [target: int]\ndistinct_nodes: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [source: int]\nstr_nodes: String = {\"id\": 28, \"label\": 28},{\"id\": 26, \"label\": 26},{\"id\": 27, \"label\": 27},{\"id\": 12, \"label\": 12},{\"id\": 22, \"label\": 22},{\"id\": 1, \"label\": 1},{\"id\": 13, \"label\": 13},{\"id\": 6, \"label\": 6},{\"id\": 16, \"label\": 16},{\"id\": 3, \"label\": 3},{\"id\": 20, \"label\": 20},{\"id\": 5, \"label\": 5},{\"id\": 19, \"label\": 19},{\"id\": 15, \"label\": 15},{\"id\": 9, \"label\": 9},{\"id\": 17, \"label\": 17},{\"id\": 4, \"label\": 4},{\"id\": 8, \"label\": 8},{\"id\": 23, \"label\": 23},{\"id\": 7, \"label\": 7},{\"id\": 10, \"label\": 10},{\"id\": 25, \"label\": 25},{\"id\": 24, \"label\": 24},{\"id\": 29, \"label\": 29},{\"id\": 21, \"label\": 21},{\"id\": 11, \"label\": 11},{\"id\": 14, \"label\": 14},{\"id\": 2, \"label\": 2},{\"id\": 30, \"label\": 30},{\"id\": 0, \"label\": 0},{\"id\": 18, \"label\": 18}\nnodes: String = [{\"id\": 28, \"label\": 28},{\"id\": 26, \"label\": 26},{\"id\": 27, \"label\": 27},{\"id\": 12, \"label\": 12},{\"id\": 22, \"label\": 22},{\"id\": 1, \"label\": 1},{\"id\": 13, \"label\": 13},{\"id\": 6, \"label\": 6},{\"id\": 16, \"label\": 16},{\"id\": 3, \"label\": 3},{\"id\": 20, \"label\": 20},{\"id\": 5, \"label\": 5},{\"id\": 19, \"label\": 19},{\"id\": 15, \"label\": 15},{\"id\": 9, \"label\": 9},{\"id\": 17, \"label\": 17},{\"id\": 4, \"label\": 4},{\"id\": 8, \"label\": 8},{\"id\": 23, \"label\": 23},{\"id\": 7, \"label\": 7},{\"id\": 10, \"label\": 10},{\"id\": 25, \"label\": 25},{\"id\": 24, \"label\": 24},{\"id\": 29, \"label\": 29},{\"id\": 21, \"label\": 21},{\"id\": 11, \"label\": 11},{\"id\": 14, \"label\": 14},{\"id\": 2, \"label\": 2},{\"id\": 30, \"label\": 30},{\"id\": 0, \"label\": 0},{\"id\": 18, \"label\": 18}]\nstr_edges: String = {\"source\": 0, \"target\": 1, \"id\": 1},{\"source\": 0, \"target\": 2, \"id\": 2},{\"source\": 0, \"target\": 3, \"id\": 3},{\"source\": 0, \"target\": 4, \"id\": 4},{\"source\": 0, \"target\": 5, \"id\": 5},{\"source\": 0, \"target\": 6, \"id\": 6},{\"source\": 0, \"target\": 7, \"id\": 7},{\"source\": 0, \"target\": 8, \"id\": 8},{\"source\": 0, \"target\": 9, \"id\": 9},{\"source\": 0, \"target\": 10, \"id\": 10},{\"source\": 0, \"target\": 11, \"id\": 11},{\"source\": 0, \"target\": 12, \"id\": 12},{\"source\": 0, \"target\": 13, \"id\": 13},{\"source\": 0, \"target\": 14, \"id\": 14},{\"source\": 0, \"target\": 15, \"id\": 15},{\"source\": 0, \"target\": 16, \"id\": 16},{\"source\": 0, \"target\": 17, \"id\": 17},{\"source\": 0, \"target\": 18, \"id\": 18},{\"source\": 0, \"target\": 19, \"id\": 19},{\"source\": 0, \"target\": 20, \"id\": 20},{\"source\": 0, \"target\": 21, \"id\": 2...edges: String = [{\"source\": 0, \"target\": 1, \"id\": 1},{\"source\": 0, \"target\": 2, \"id\": 2},{\"source\": 0, \"target\": 3, \"id\": 3},{\"source\": 0, \"target\": 4, \"id\": 4},{\"source\": 0, \"target\": 5, \"id\": 5},{\"source\": 0, \"target\": 6, \"id\": 6},{\"source\": 0, \"target\": 7, \"id\": 7},{\"source\": 0, \"target\": 8, \"id\": 8},{\"source\": 0, \"target\": 9, \"id\": 9},{\"source\": 0, \"target\": 10, \"id\": 10},{\"source\": 0, \"target\": 11, \"id\": 11},{\"source\": 0, \"target\": 12, \"id\": 12},{\"source\": 0, \"target\": 13, \"id\": 13},{\"source\": 0, \"target\": 14, \"id\": 14},{\"source\": 0, \"target\": 15, \"id\": 15},{\"source\": 0, \"target\": 16, \"id\": 16},{\"source\": 0, \"target\": 17, \"id\": 17},{\"source\": 0, \"target\": 18, \"id\": 18},{\"source\": 0, \"target\": 19, \"id\": 19},{\"source\": 0, \"target\": 20, \"id\": 20},{\"source\": 0, \"target\": 21, \"id\": 21},...similar_array2: String = \"1\": \"#3071A9\",\"3\": \"#3071A9\",\"5\": \"#3071A9\"\nlabels: String = {\"1\": \"#3071A9\",\"3\": \"#3071A9\",\"5\": \"#3071A9\"}\n\n"},{"type":"NETWORK","data":"{\n    \"nodes\": [{\"id\": 28, \"label\": 28},{\"id\": 26, \"label\": 26},{\"id\": 27, \"label\": 27},{\"id\": 12, \"label\": 12},{\"id\": 22, \"label\": 22},{\"id\": 1, \"label\": 1},{\"id\": 13, \"label\": 13},{\"id\": 6, \"label\": 6},{\"id\": 16, \"label\": 16},{\"id\": 3, \"label\": 3},{\"id\": 20, \"label\": 20},{\"id\": 5, \"label\": 5},{\"id\": 19, \"label\": 19},{\"id\": 15, \"label\": 15},{\"id\": 9, \"label\": 9},{\"id\": 17, \"label\": 17},{\"id\": 4, \"label\": 4},{\"id\": 8, \"label\": 8},{\"id\": 23, \"label\": 23},{\"id\": 7, \"label\": 7},{\"id\": 10, \"label\": 10},{\"id\": 25, \"label\": 25},{\"id\": 24, \"label\": 24},{\"id\": 29, \"label\": 29},{\"id\": 21, \"label\": 21},{\"id\": 11, \"label\": 11},{\"id\": 14, \"label\": 14},{\"id\": 2, \"label\": 2},{\"id\": 30, \"label\": 30},{\"id\": 0, \"label\": 0},{\"id\": 18, \"label\": 18}],\n    \"edges\": [{\"source\": 0, \"target\": 1, \"id\": 1},{\"source\": 0, \"target\": 2, \"id\": 2},{\"source\": 0, \"target\": 3, \"id\": 3},{\"source\": 0, \"target\": 4, \"id\": 4},{\"source\": 0, \"target\": 5, \"id\": 5},{\"source\": 0, \"target\": 6, \"id\": 6},{\"source\": 0, \"target\": 7, \"id\": 7},{\"source\": 0, \"target\": 8, \"id\": 8},{\"source\": 0, \"target\": 9, \"id\": 9},{\"source\": 0, \"target\": 10, \"id\": 10},{\"source\": 0, \"target\": 11, \"id\": 11},{\"source\": 0, \"target\": 12, \"id\": 12},{\"source\": 0, \"target\": 13, \"id\": 13},{\"source\": 0, \"target\": 14, \"id\": 14},{\"source\": 0, \"target\": 15, \"id\": 15},{\"source\": 0, \"target\": 16, \"id\": 16},{\"source\": 0, \"target\": 17, \"id\": 17},{\"source\": 0, \"target\": 18, \"id\": 18},{\"source\": 0, \"target\": 19, \"id\": 19},{\"source\": 0, \"target\": 20, \"id\": 20},{\"source\": 0, \"target\": 21, \"id\": 21},{\"source\": 0, \"target\": 22, \"id\": 22},{\"source\": 0, \"target\": 23, \"id\": 23},{\"source\": 0, \"target\": 24, \"id\": 24},{\"source\": 0, \"target\": 25, \"id\": 25},{\"source\": 0, \"target\": 26, \"id\": 26},{\"source\": 0, \"target\": 27, \"id\": 27},{\"source\": 0, \"target\": 28, \"id\": 28},{\"source\": 0, \"target\": 29, \"id\": 29},{\"source\": 0, \"target\": 30, \"id\": 30}],\n    \"labels\": {\"1\": \"#3071A9\",\"3\": \"#3071A9\",\"5\": \"#3071A9\"}\n}\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://192.168.31.142:4041/jobs/job/?id=10","http://192.168.31.142:4041/jobs/job/?id=11"],"interpreterSettingId":"2D3XQTERJ"}}},{"text":"///////trial code \n%spark\nvar myarr = Array(1, 3, 5)\n// var myarr1 = myarr.map(n => s\"\"\"$n\"\"\")\nvar myarr2 = myarr.map(n => s\"\"\"\"${n}\":\"aaaa\"\"\"\").mkString(\",\")\nvar string = s\"\"\"{$myarr2}\"\"\"\nprint (string)","user":"anonymous","dateUpdated":"2018-01-26T00:44:27-0500","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1516942518296_-827053899","id":"20180125-235518_1016981602","dateCreated":"2018-01-25T23:55:18-0500","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:1683","dateFinished":"2018-01-26T00:35:24-0500","dateStarted":"2018-01-26T00:35:23-0500","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"myarr: Array[Int] = Array(1, 3, 5)\nmyarr2: String = \"1\":\"aaaa\",\"3\":\"aaaa\",\"5\":\"aaaa\"\nstring: String = {\"1\":\"aaaa\",\"3\":\"aaaa\",\"5\":\"aaaa\"}\n{\"1\":\"aaaa\",\"3\":\"aaaa\",\"5\":\"aaaa\"}"}]}},{"text":"%spark\n","user":"anonymous","dateUpdated":"2018-01-26T00:03:47-0500","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1516943027243_1640579317","id":"20180126-000347_1902790845","dateCreated":"2018-01-26T00:03:47-0500","status":"READY","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:1774"}],"name":"network-data-withNodeID","id":"2D5JK8FS2","noteParams":{},"noteForms":{},"angularObjects":{"2D3XQTERJ:shared_process":[]},"config":{"looknfeel":"default","personalizedMode":"false"},"info":{}}